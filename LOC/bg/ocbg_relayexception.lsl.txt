//start_unprocessed_text
/*string g_sSubMenu = "Relay Ex.";
string g_sParentMenu = "Apps";
list g_lMenuIDs;  
integer g_iMenuStride = 3;

key g_kWearer; 

integer CMD_OWNER = 500;
integer CMD_WEARER = 503;

integer NOTIFY = 1002;

integer REBOOT = -1000;
integer LINK_DIALOG = 3;
integer LINK_RLV = 4;
integer LINK_SAVE = 5;
integer LINK_UPDATE = -10;

integer LM_SETTING_RESPONSE = 2002;

integer MENUNAME_REQUEST = 3000;

integer DIALOG = -9000;
integer DIALOG_RESPONSE = -9001;
integer DIALOG_TIMEOUT = -9002;

string UPMENU = "BACK";

integer RLV_CMD = 6000;
integer RLV_CMD_EXCEPTION = 6166;

integer g_iIM;
integer g_iWEAR;
integer g_iFLY;
integer g_iID;
integer g_iMAPS;
integer g_iADMIN;
integer g_iHEARING;
integer g_iSPEAKING;
integer g_iUNSIT;
integer g_iINV;
integer g_iTP;
integer g_iRUN;
integer g_iMOVEMENT;
integer g_iVIEW;
integer g_iCOM;
integer g_iTOUCH;
integer g_iVIEWER;

integer BGCOLLAR_CHANNEL_RESPONSE =-667571900;
string sReporterName="RELAY_EXCEPTION";
string sStr_denied="DENIED silly person. (Relay Exceptions)";
UserCommand(integer iNum, string sStr, key kID) { 
   
    if(llToLower(sStr)=="bgversion"){
        llRegionSay(BGCOLLAR_CHANNEL_RESPONSE,"BGVERSION_RESPONSE,relay_exception,17,09,15,108");
    }else
    if (llToLower(sStr) == "menu relayexception" ||llToLower(sStr) == "relayexception" || llToLower(sStr) == llToLower(g_sSubMenu)){
        if(iNum==CMD_OWNER||g_kWearer==llGetOwnerKey(kID)){

            ExceptionMenu(kID, iNum);
        }else{
            llMessageLinked(LINK_DIALOG,NOTIFY,"0"+sStr_denied, kID);
        }
    }else if (llSubStringIndex(sStr,"relayexception")==0) {
        if(iNum==CMD_OWNER||g_kWearer==llGetOwnerKey(kID)){
            integer strlen = llStringLength("relayexception");
            sStr=llGetSubString(sStr,strlen+1,-1); 
            ExceptionCommand(iNum,sStr, kID,FALSE);
        }else{
            llMessageLinked(LINK_DIALOG,NOTIFY,"0"+sStr_denied, kID);
        }
    }
    
}

string SubstitudeRLV(string sMsg) {
    if(sMsg==""){
        return sMsg;
    }
    
    if ((g_iMOVEMENT||g_iFLY)&&(~llSubStringIndex(sMsg, "fly"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    if ((g_iMOVEMENT||g_iRUN)&&(~llSubStringIndex(sMsg, "temprun")||~llSubStringIndex(sMsg, "alwaysrun"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if ((g_iVIEW)&&(~llSubStringIndex(sMsg, "cam")||~llSubStringIndex(sMsg, "setcam"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if (g_iCOM&&(~llSubStringIndex(sMsg, "chat")||~llSubStringIndex(sMsg, "gesture")||~llSubStringIndex(sMsg, "emote")||~llSubStringIndex(sMsg, "sendchannel"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    if ((g_iCOM||g_iHEARING)&&~llSubStringIndex(sMsg, "recvchat")){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    if ((g_iCOM||g_iSPEAKING)&&(~llSubStringIndex(sMsg, "chatnormal")||~llSubStringIndex(sMsg, "chatwhisper")||~llSubStringIndex(sMsg, "chatshout"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    if ((g_iCOM||g_iIM)&&(~llSubStringIndex(sMsg, "recvim")||~llSubStringIndex(sMsg, "sendim"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
  
    if (g_iTP&&(~llSubStringIndex(sMsg, "tplm")||~llSubStringIndex(sMsg, "tploc")||~llSubStringIndex(sMsg, "tplure")||~llSubStringIndex(sMsg, "standtp")||~llSubStringIndex(sMsg, "sittp")||~llSubStringIndex(sMsg, "accepttp")||~llSubStringIndex(sMsg, "tprequest"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if ((g_iADMIN||g_iINV)&&(~llSubStringIndex(sMsg, "edit")||~llSubStringIndex(sMsg, "rez"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    if (g_iADMIN&&(~llSubStringIndex(sMsg, "permissive")||~llSubStringIndex(sMsg, "interact"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if (g_iINV&&(~llSubStringIndex(sMsg, "showinv")||~llSubStringIndex(sMsg, "viewnote")||~llSubStringIndex(sMsg, "viewscript")||~llSubStringIndex(sMsg, "viewtexture"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    } 
    
    if (g_iUNSIT&&(~llSubStringIndex(sMsg, "unsit")||~llSubStringIndex(sMsg, "sit"))){
        if (~llSubStringIndex(sMsg, "=n")){
                return "";
        }
    }
    
    if (g_iWEAR&&(~llSubStringIndex(sMsg, "addoutfit")||~llSubStringIndex(sMsg, "remoutfit")||~llSubStringIndex(sMsg, "detach")||~llSubStringIndex(sMsg, "addattach")||~llSubStringIndex(sMsg, "remattach")||~llSubStringIndex(sMsg, "defaultwear"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }  
    if (g_iWEAR&&(~llSubStringIndex(sMsg, "denypermission")||~llSubStringIndex(sMsg, "acceptpermission"))){
        if (~llSubStringIndex(sMsg, "=add")){
            return "";
        }
    }  
    if (g_iWEAR&&(~llSubStringIndex(sMsg, "unsharedwear")||~llSubStringIndex(sMsg, "unsharedunwear")||~llSubStringIndex(sMsg, "sharedwear")||~llSubStringIndex(sMsg, "sharedunwear"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    } 
    if (g_iWEAR&&(~llSubStringIndex(sMsg, "detachthis")||~llSubStringIndex(sMsg, "detachallthis")||~llSubStringIndex(sMsg, "attachthis")||~llSubStringIndex(sMsg, "attachallthis"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }  
    
    if (g_iTOUCH&&(~llSubStringIndex(sMsg, "touch")||~llSubStringIndex(sMsg, "interact"))){
        if (~llSubStringIndex(sMsg, "=n")){
                return "";
        }
    }
    
    if (g_iMAPS&&(~llSubStringIndex(sMsg, "showloc")||~llSubStringIndex(sMsg, "showminimap")||~llSubStringIndex(sMsg, "showworldmap"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if (g_iID&&(~llSubStringIndex(sMsg, "shownames")||~llSubStringIndex(sMsg, "showhovertext"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if (g_iVIEWER&&(~llSubStringIndex(sMsg, "setdebug")||~llSubStringIndex(sMsg, "setenv"))){
        if (~llSubStringIndex(sMsg, "=n")||~llSubStringIndex(sMsg, "=force")){
            return "";
        }
    }
    
    return sMsg;
}

Dialog(key kRCPT, string sPrompt, list lChoices, list lUtilityButtons, integer iPage, integer iAuth, string iMenuType) {
    key kMenuID = llGenerateKey();
    llMessageLinked(LINK_DIALOG, DIALOG, (string)kRCPT + "|" + sPrompt + "|" + (string)iPage + "|" + llDumpList2String(lChoices, "`") + "|" + llDumpList2String(lUtilityButtons, "`") + "|" + (string)iAuth, kMenuID);
    integer iIndex = llListFindList(g_lMenuIDs, [kRCPT]);
    if (~iIndex) g_lMenuIDs = llListReplaceList(g_lMenuIDs, [kRCPT, kMenuID, iMenuType], iIndex, iIndex + g_iMenuStride - 1);
    else g_lMenuIDs += [kRCPT, kMenuID, iMenuType];
}
ExceptionMenu(key kID, integer iAuth) {
    string sPrompt = "Relay Exceptions \n";
    sPrompt += "\n☒ - Means its activated the restriction exception.";
    sPrompt += "\n☐ - Means its inactive the restriction exception.";
    list lMyButtons;
    
    if(g_iIM){
        lMyButtons=["☒ IM"];
    }else{
        lMyButtons=["☐ IM"];
    }
    
    if(g_iWEAR){
        lMyButtons+=["☒ Wear"];
    }else{
        lMyButtons+=["☐ Wear"];
    }
    
    if(g_iFLY){
        lMyButtons+=["☒ Fly"];
    }else{
        lMyButtons+=["☐ Fly"];
    }
    
    if(g_iID){
        lMyButtons+=["☒ ID"];
    }else{
        lMyButtons+=["☐ ID"];
    }
    
    if(g_iMAPS){
        lMyButtons+=["☒ Maps"];
    }else{
        lMyButtons+=["☐ Maps"];
    }
    
    if(g_iADMIN){
        lMyButtons+=["☒ Admin"];
    }else{
        lMyButtons+=["☐ Admin"];
    }
    
    if(g_iHEARING){
        lMyButtons+=["☒ Hearing"];
    }else{
        lMyButtons+=["☐ Hearing"];
    }
    
    if(g_iSPEAKING){
        lMyButtons+=["☒ Speaking"];
    }else{
        lMyButtons+=["☐ Speaking"];
    }
    
    if(g_iUNSIT){
        lMyButtons+=["☒ Sit"];
    }else{
        lMyButtons+=["☐ Sit"];
    }
    
    if(g_iINV){
        lMyButtons+=["☒ Inv"];
    }else{
        lMyButtons+=["☐ Inv"];
    }
    
    if(g_iTP){
        lMyButtons+=["☒ TP"];
    }else{
        lMyButtons+=["☐ TP"];
    }
    
    if(g_iRUN){
        lMyButtons+=["☒ Run"];
    }else{
        lMyButtons+=["☐ Run"];
    }
   
    if(g_iMOVEMENT){
        lMyButtons+=["☒ Movement"];
    }else{
        lMyButtons+=["☐ Movement"];
    }
    
    if(g_iVIEW){
        lMyButtons+=["☒ View"];
    }else{
        lMyButtons+=["☐ View"];
    }
    
    if(g_iCOM){
        lMyButtons+=["☒ Com"];
    }else{
        lMyButtons+=["☐ Com"];
    }
    
    if(g_iTOUCH){
        lMyButtons+=["☒ Touch"];
    }else{
        lMyButtons+=["☐ Touch"];
    }
    
    if(g_iVIEWER){
        lMyButtons+=["☒ Viewer"];
    }else{
        lMyButtons+=["☐ Viewer"];
    }
    Dialog(kID, sPrompt, lMyButtons, [UPMENU], 0, iAuth, "RelayExceptionsMenu");
}
StatusUpdater(string sStr){
    llRegionSay(BGCOLLAR_CHANNEL_RESPONSE,sReporterName+","+sStr);
}
RequestSettings(){
    if(g_iIM)
        StatusUpdater("im");
    
    if(g_iWEAR)
        StatusUpdater("wear");
    
    if(g_iFLY)
        StatusUpdater("fly");
    
    if(g_iID)
        StatusUpdater("id");
    
    if(g_iMAPS)
        StatusUpdater("map");
    
    if(g_iADMIN)
        StatusUpdater("admin");
    
    if(g_iHEARING)
        StatusUpdater("hearing");
    
    if(g_iSPEAKING)
        StatusUpdater("speaking");
    
    if(g_iUNSIT)
        StatusUpdater("unsit");
    
    if(g_iINV)
        StatusUpdater("inv");
    
    if(g_iTP)
        StatusUpdater("tp");
    
    if(g_iRUN)
        StatusUpdater("run");
   
    if(g_iMOVEMENT)
        StatusUpdater("move");
    
    if(g_iVIEW)
        StatusUpdater("view");
    
    if(g_iCOM)
        StatusUpdater("com");
    
    if(g_iTOUCH)
        StatusUpdater("touch");
    
    if(g_iVIEWER)
        StatusUpdater("viewer");
}
ExceptionCommand(integer iNum, string sStr, key kID, integer iFromMenu){
    list lParams = llParseString2List(sStr, [" "], []);
    string sToken = llToLower(llList2String(lParams, 0));
    string sValue = llToLower(llList2String(lParams, 1));
   
    if(sToken=="request"){
        RequestSettings();
    }else
    if(sToken=="☒" ||sValue=="0"){
        if(sToken=="wear" ||sValue=="wear"){
            g_iWEAR=0;
        }else
        if(sToken=="fly" ||sValue=="fly"){
            g_iFLY=0;
        }else
        if(sToken=="id" ||sValue=="id"){
            g_iID=0;
        }else
        if(sToken=="im" ||sValue=="im"){
            g_iIM=0;
        }else
        if(sToken=="maps" ||sValue=="maps"){
            g_iMAPS=0;
        }else
        if(sToken=="admin" ||sValue=="admin"){
            g_iADMIN=0;
        }else
        if(sToken=="hearing" ||sValue=="hearing"){
            g_iHEARING=0;
        }else
        if(sToken=="speaking" ||sValue=="speaking"){
            g_iSPEAKING=0;
        }else
        if(sToken=="sit" ||sValue=="sit"){
            g_iUNSIT=0;
        }
        if(sToken=="inv" ||sValue=="inv"){
            g_iINV=0;
        }else
        if(sToken=="tp" ||sValue=="tp"){
            g_iTP=0;
        }else
        if(sToken=="run" ||sValue=="run"){
            g_iRUN=0;
        }else
        if(sToken=="movement" ||sValue=="movement"){
            g_iMOVEMENT=0;
        }else
        if(sToken=="view" ||sValue=="view"){
            g_iVIEW=0;
        }else
        if(sToken=="com" ||sValue=="com"){
            g_iCOM=0;
        }else
        if(sToken=="touch" ||sValue=="touch"){
            g_iTOUCH=0;
        }else
        if(sToken=="viewer" ||sValue=="viewer"){
            g_iVIEWER=0;
        }
        
        if(iFromMenu){
             ExceptionMenu(kID, iNum);
        }
    }else
    if(sToken=="☐" ||sValue=="1"){
        if(sToken=="wear" ||sValue=="wear"){
            g_iWEAR=1;
        }else
        if(sToken=="fly" ||sValue=="fly"){
            g_iFLY=1;
        }else
        if(sToken=="id" ||sValue=="id"){
            g_iID=1;
        }else
        if(sToken=="im" ||sValue=="im"){
            g_iIM=1;
        }else
        if(sToken=="maps" ||sValue=="maps"){
            g_iMAPS=1;
        }else
        if(sToken=="admin" ||sValue=="admin"){
            g_iADMIN=1;
        }else
        if(sToken=="hearing" ||sValue=="hearing"){
            g_iHEARING=1;
        }else
        if(sToken=="speaking" ||sValue=="speaking"){
            g_iSPEAKING=1;
        }else
        if(sToken=="sit" ||sValue=="sit"){
            g_iUNSIT=1;
        }else
        if(sToken=="inv" ||sValue=="inv"){
            g_iINV=1;
        }else
        if(sToken=="tp" ||sValue=="tp"){
            g_iTP=1;
        }else
        if(sToken=="run" ||sValue=="run"){
            g_iRUN=1;
        }else
        if(sToken=="movement" ||sValue=="movement"){
            g_iMOVEMENT=1;
        }else
        if(sToken=="view" ||sValue=="view"){
            g_iVIEW=1;
        }else
        if(sToken=="com" ||sValue=="com"){
            g_iCOM=1;
        }else
        if(sToken=="touch" ||sValue=="touch"){
            g_iTOUCH=1;
        }else
        if(sToken=="viewer" ||sValue=="viewer"){
            g_iVIEWER=1;
        }
        
        if(iFromMenu){
             ExceptionMenu(kID, iNum);
        }
    }
    
    
    
}
first(){
    g_iADMIN=1;
    g_iINV=1;
}
init(){
    g_kWearer=llGetOwner();
}
default {
    on_rez(integer param) {
        init();
    }

    state_entry() {
        init();first();
    }

    link_message(integer iSender, integer iNum, string sStr, key kID) {
        if(iNum==RLV_CMD_EXCEPTION)
        {
            llRegionSay(BGCOLLAR_CHANNEL_RESPONSE,sReporterName+",before,"+sStr);
            RequestSettings();
            sStr=SubstitudeRLV(sStr);
            if(sStr!=""&&3<llStringLength(sStr)){
                llRegionSay(BGCOLLAR_CHANNEL_RESPONSE,sReporterName+",after,"+sStr);
                llMessageLinked(LINK_RLV,RLV_CMD,sStr,kID);
            }
        }
        else if (iNum == MENUNAME_REQUEST && sStr == g_sParentMenu){}
            
        else if (iNum >= CMD_OWNER && iNum <= CMD_WEARER)
            UserCommand(iNum, sStr, kID);
        else if (iNum == DIALOG_RESPONSE) {
            integer iMenuIndex = llListFindList(g_lMenuIDs, [kID]);
            if (~iMenuIndex) {
                string sMenuType = llList2String(g_lMenuIDs, iMenuIndex + 1);
                g_lMenuIDs = llDeleteSubList(g_lMenuIDs, iMenuIndex - 1, iMenuIndex - 2 + g_iMenuStride);
                list lMenuParams = llParseString2List(sStr, ["|"], []);
                key kAV = llList2String(lMenuParams, 0);
                string sMessage = llList2String(lMenuParams, 1);
                integer iPage = (integer)llList2String(lMenuParams, 2);
                integer iAuth = (integer)llList2String(lMenuParams, 3);
                
                if (sMessage == UPMENU) {
                    llMessageLinked(LINK_ROOT, iAuth, "menu "+"Relay", kAV);
                    return;
                }else{
                    ExceptionCommand(iAuth,sMessage,kAV,TRUE);
                }
                
            }
        } else if (iNum == DIALOG_TIMEOUT) {
            integer iMenuIndex = llListFindList(g_lMenuIDs, [kID]);
            g_lMenuIDs = llDeleteSubList(g_lMenuIDs, iMenuIndex - 1, iMenuIndex +3);  
        } else if (iNum == LM_SETTING_RESPONSE) {
            
        } else if (iNum == LINK_UPDATE) {
            if (sStr == "LINK_DIALOG") LINK_DIALOG = iSender;
            else if (sStr == "LINK_SAVE") LINK_SAVE = iSender;
            else if (sStr == "LINK_RLV") LINK_RLV = iSender;
        } else if (iNum == REBOOT && sStr == "reboot") llResetScript();
    }



    changed(integer iChange) {
        if (iChange & CHANGED_OWNER) llResetScript();
    }
}

*/
//end_unprocessed_text
//nfo_preprocessor_version 0
//program_version Firestorm-Releasex64 5.0.7.52912 - redhuskycjr17
//last_compiled 09/22/2017 05:36:39
//mono




string g_sSubMenu = "Relay Ex.";
string g_sParentMenu = "Apps";
list g_lMenuIDs;  
integer g_iMenuStride = 3;

key g_kWearer; 

integer CMD_OWNER = 500;
integer CMD_WEARER = 503;

integer NOTIFY = 1002;

integer REBOOT = -1000;
integer LINK_DIALOG = 3;
integer LINK_RLV = 4;
integer LINK_SAVE = 5;
integer LINK_UPDATE = -10;

integer LM_SETTING_RESPONSE = 2002;

integer MENUNAME_REQUEST = 3000;

integer DIALOG = -9000;
integer DIALOG_RESPONSE = -9001;
integer DIALOG_TIMEOUT = -9002;

string UPMENU = "BACK";

integer RLV_CMD = 6000;
integer RLV_CMD_EXCEPTION = 6166;

integer g_iIM;
integer g_iWEAR;
integer g_iFLY;
integer g_iID;
integer g_iMAPS;
integer g_iADMIN;
integer g_iHEARING;
integer g_iSPEAKING;
integer g_iUNSIT;
integer g_iINV;
integer g_iTP;
integer g_iRUN;
integer g_iMOVEMENT;
integer g_iVIEW;
integer g_iCOM;
integer g_iTOUCH;
integer g_iVIEWER;

integer BGCOLLAR_CHANNEL_RESPONSE =-667571900;
string sReporterName="RELAY_EXCEPTION";
string sStr_denied="DENIED silly person. (Relay Exceptions)";

Dialog(key kRCPT, string sPrompt, list lChoices, list lUtilityButtons, integer iPage, integer iAuth, string iMenuType) {
    key kMenuID = llGenerateKey();
    llMessageLinked(LINK_DIALOG, DIALOG, (string)kRCPT + "|" + sPrompt + "|" + (string)iPage + "|" + llDumpList2String(lChoices, "`") + "|" + llDumpList2String(lUtilityButtons, "`") + "|" + (string)iAuth, kMenuID);
    integer iIndex = llListFindList(g_lMenuIDs, [kRCPT]);
    if (~iIndex) g_lMenuIDs = llListReplaceList(g_lMenuIDs, [kRCPT, kMenuID, iMenuType], iIndex, iIndex + g_iMenuStride - 1);
    else g_lMenuIDs += [kRCPT, kMenuID, iMenuType];
}
init(){
    g_kWearer=llGetOwner();
}
first(){
    g_iADMIN=1;
    g_iINV=1;
}
UserCommand(integer iNum, string sStr, key kID) { 
   
    if(llToLower(sStr)=="bgversion"){
        llRegionSay(BGCOLLAR_CHANNEL_RESPONSE,"BGVERSION_RESPONSE,relay_exception,17,09,15,108");
    }else
    if (llToLower(sStr) == "menu relayexception" ||llToLower(sStr) == "relayexception" || llToLower(sStr) == llToLower(g_sSubMenu)){
        if(iNum==CMD_OWNER||g_kWearer==llGetOwnerKey(kID)){

            ExceptionMenu(kID, iNum);
        }else{
            llMessageLinked(LINK_DIALOG,NOTIFY,"0"+sStr_denied, kID);
        }
    }else if (llSubStringIndex(sStr,"relayexception")==0) {
        if(iNum==CMD_OWNER||g_kWearer==llGetOwnerKey(kID)){
            integer strlen = llStringLength("relayexception");
            sStr=llGetSubString(sStr,strlen+1,-1); 
            ExceptionCommand(iNum,sStr, kID,FALSE);
        }else{
            llMessageLinked(LINK_DIALOG,NOTIFY,"0"+sStr_denied, kID);
        }
    }
    
}

string SubstitudeRLV(string sMsg) {
    if(sMsg==""){
        return sMsg;
    }
    
    if ((g_iMOVEMENT||g_iFLY)&&(~llSubStringIndex(sMsg, "fly"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    if ((g_iMOVEMENT||g_iRUN)&&(~llSubStringIndex(sMsg, "temprun")||~llSubStringIndex(sMsg, "alwaysrun"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if ((g_iVIEW)&&(~llSubStringIndex(sMsg, "cam")||~llSubStringIndex(sMsg, "setcam"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if (g_iCOM&&(~llSubStringIndex(sMsg, "chat")||~llSubStringIndex(sMsg, "gesture")||~llSubStringIndex(sMsg, "emote")||~llSubStringIndex(sMsg, "sendchannel"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    if ((g_iCOM||g_iHEARING)&&~llSubStringIndex(sMsg, "recvchat")){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    if ((g_iCOM||g_iSPEAKING)&&(~llSubStringIndex(sMsg, "chatnormal")||~llSubStringIndex(sMsg, "chatwhisper")||~llSubStringIndex(sMsg, "chatshout"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    if ((g_iCOM||g_iIM)&&(~llSubStringIndex(sMsg, "recvim")||~llSubStringIndex(sMsg, "sendim"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
  
    if (g_iTP&&(~llSubStringIndex(sMsg, "tplm")||~llSubStringIndex(sMsg, "tploc")||~llSubStringIndex(sMsg, "tplure")||~llSubStringIndex(sMsg, "standtp")||~llSubStringIndex(sMsg, "sittp")||~llSubStringIndex(sMsg, "accepttp")||~llSubStringIndex(sMsg, "tprequest"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if ((g_iADMIN||g_iINV)&&(~llSubStringIndex(sMsg, "edit")||~llSubStringIndex(sMsg, "rez"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    if (g_iADMIN&&(~llSubStringIndex(sMsg, "permissive")||~llSubStringIndex(sMsg, "interact"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if (g_iINV&&(~llSubStringIndex(sMsg, "showinv")||~llSubStringIndex(sMsg, "viewnote")||~llSubStringIndex(sMsg, "viewscript")||~llSubStringIndex(sMsg, "viewtexture"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    } 
    
    if (g_iUNSIT&&(~llSubStringIndex(sMsg, "unsit")||~llSubStringIndex(sMsg, "sit"))){
        if (~llSubStringIndex(sMsg, "=n")){
                return "";
        }
    }
    
    if (g_iWEAR&&(~llSubStringIndex(sMsg, "addoutfit")||~llSubStringIndex(sMsg, "remoutfit")||~llSubStringIndex(sMsg, "detach")||~llSubStringIndex(sMsg, "addattach")||~llSubStringIndex(sMsg, "remattach")||~llSubStringIndex(sMsg, "defaultwear"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }  
    if (g_iWEAR&&(~llSubStringIndex(sMsg, "denypermission")||~llSubStringIndex(sMsg, "acceptpermission"))){
        if (~llSubStringIndex(sMsg, "=add")){
            return "";
        }
    }  
    if (g_iWEAR&&(~llSubStringIndex(sMsg, "unsharedwear")||~llSubStringIndex(sMsg, "unsharedunwear")||~llSubStringIndex(sMsg, "sharedwear")||~llSubStringIndex(sMsg, "sharedunwear"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    } 
    if (g_iWEAR&&(~llSubStringIndex(sMsg, "detachthis")||~llSubStringIndex(sMsg, "detachallthis")||~llSubStringIndex(sMsg, "attachthis")||~llSubStringIndex(sMsg, "attachallthis"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }  
    
    if (g_iTOUCH&&(~llSubStringIndex(sMsg, "touch")||~llSubStringIndex(sMsg, "interact"))){
        if (~llSubStringIndex(sMsg, "=n")){
                return "";
        }
    }
    
    if (g_iMAPS&&(~llSubStringIndex(sMsg, "showloc")||~llSubStringIndex(sMsg, "showminimap")||~llSubStringIndex(sMsg, "showworldmap"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if (g_iID&&(~llSubStringIndex(sMsg, "shownames")||~llSubStringIndex(sMsg, "showhovertext"))){
        if (~llSubStringIndex(sMsg, "=n")){
            return "";
        }
    }
    
    if (g_iVIEWER&&(~llSubStringIndex(sMsg, "setdebug")||~llSubStringIndex(sMsg, "setenv"))){
        if (~llSubStringIndex(sMsg, "=n")||~llSubStringIndex(sMsg, "=force")){
            return "";
        }
    }
    
    return sMsg;
}
StatusUpdater(string sStr){
    llRegionSay(BGCOLLAR_CHANNEL_RESPONSE,sReporterName+","+sStr);
}
RequestSettings(){
    if(g_iIM)
        StatusUpdater("im");
    
    if(g_iWEAR)
        StatusUpdater("wear");
    
    if(g_iFLY)
        StatusUpdater("fly");
    
    if(g_iID)
        StatusUpdater("id");
    
    if(g_iMAPS)
        StatusUpdater("map");
    
    if(g_iADMIN)
        StatusUpdater("admin");
    
    if(g_iHEARING)
        StatusUpdater("hearing");
    
    if(g_iSPEAKING)
        StatusUpdater("speaking");
    
    if(g_iUNSIT)
        StatusUpdater("unsit");
    
    if(g_iINV)
        StatusUpdater("inv");
    
    if(g_iTP)
        StatusUpdater("tp");
    
    if(g_iRUN)
        StatusUpdater("run");
   
    if(g_iMOVEMENT)
        StatusUpdater("move");
    
    if(g_iVIEW)
        StatusUpdater("view");
    
    if(g_iCOM)
        StatusUpdater("com");
    
    if(g_iTOUCH)
        StatusUpdater("touch");
    
    if(g_iVIEWER)
        StatusUpdater("viewer");
}
ExceptionMenu(key kID, integer iAuth) {
    string sPrompt = "Relay Exceptions \n";
    sPrompt += "\n☒ - Means its activated the restriction exception.";
    sPrompt += "\n☐ - Means its inactive the restriction exception.";
    list lMyButtons;
    
    if(g_iIM){
        lMyButtons=["☒ IM"];
    }else{
        lMyButtons=["☐ IM"];
    }
    
    if(g_iWEAR){
        lMyButtons+=["☒ Wear"];
    }else{
        lMyButtons+=["☐ Wear"];
    }
    
    if(g_iFLY){
        lMyButtons+=["☒ Fly"];
    }else{
        lMyButtons+=["☐ Fly"];
    }
    
    if(g_iID){
        lMyButtons+=["☒ ID"];
    }else{
        lMyButtons+=["☐ ID"];
    }
    
    if(g_iMAPS){
        lMyButtons+=["☒ Maps"];
    }else{
        lMyButtons+=["☐ Maps"];
    }
    
    if(g_iADMIN){
        lMyButtons+=["☒ Admin"];
    }else{
        lMyButtons+=["☐ Admin"];
    }
    
    if(g_iHEARING){
        lMyButtons+=["☒ Hearing"];
    }else{
        lMyButtons+=["☐ Hearing"];
    }
    
    if(g_iSPEAKING){
        lMyButtons+=["☒ Speaking"];
    }else{
        lMyButtons+=["☐ Speaking"];
    }
    
    if(g_iUNSIT){
        lMyButtons+=["☒ Sit"];
    }else{
        lMyButtons+=["☐ Sit"];
    }
    
    if(g_iINV){
        lMyButtons+=["☒ Inv"];
    }else{
        lMyButtons+=["☐ Inv"];
    }
    
    if(g_iTP){
        lMyButtons+=["☒ TP"];
    }else{
        lMyButtons+=["☐ TP"];
    }
    
    if(g_iRUN){
        lMyButtons+=["☒ Run"];
    }else{
        lMyButtons+=["☐ Run"];
    }
   
    if(g_iMOVEMENT){
        lMyButtons+=["☒ Movement"];
    }else{
        lMyButtons+=["☐ Movement"];
    }
    
    if(g_iVIEW){
        lMyButtons+=["☒ View"];
    }else{
        lMyButtons+=["☐ View"];
    }
    
    if(g_iCOM){
        lMyButtons+=["☒ Com"];
    }else{
        lMyButtons+=["☐ Com"];
    }
    
    if(g_iTOUCH){
        lMyButtons+=["☒ Touch"];
    }else{
        lMyButtons+=["☐ Touch"];
    }
    
    if(g_iVIEWER){
        lMyButtons+=["☒ Viewer"];
    }else{
        lMyButtons+=["☐ Viewer"];
    }
    Dialog(kID, sPrompt, lMyButtons, [UPMENU], 0, iAuth, "RelayExceptionsMenu");
}
ExceptionCommand(integer iNum, string sStr, key kID, integer iFromMenu){
    list lParams = llParseString2List(sStr, [" "], []);
    string sToken = llToLower(llList2String(lParams, 0));
    string sValue = llToLower(llList2String(lParams, 1));
   
    if(sToken=="request"){
        RequestSettings();
    }else
    if(sToken=="☒" ||sValue=="0"){
        if(sToken=="wear" ||sValue=="wear"){
            g_iWEAR=0;
        }else
        if(sToken=="fly" ||sValue=="fly"){
            g_iFLY=0;
        }else
        if(sToken=="id" ||sValue=="id"){
            g_iID=0;
        }else
        if(sToken=="im" ||sValue=="im"){
            g_iIM=0;
        }else
        if(sToken=="maps" ||sValue=="maps"){
            g_iMAPS=0;
        }else
        if(sToken=="admin" ||sValue=="admin"){
            g_iADMIN=0;
        }else
        if(sToken=="hearing" ||sValue=="hearing"){
            g_iHEARING=0;
        }else
        if(sToken=="speaking" ||sValue=="speaking"){
            g_iSPEAKING=0;
        }else
        if(sToken=="sit" ||sValue=="sit"){
            g_iUNSIT=0;
        }
        if(sToken=="inv" ||sValue=="inv"){
            g_iINV=0;
        }else
        if(sToken=="tp" ||sValue=="tp"){
            g_iTP=0;
        }else
        if(sToken=="run" ||sValue=="run"){
            g_iRUN=0;
        }else
        if(sToken=="movement" ||sValue=="movement"){
            g_iMOVEMENT=0;
        }else
        if(sToken=="view" ||sValue=="view"){
            g_iVIEW=0;
        }else
        if(sToken=="com" ||sValue=="com"){
            g_iCOM=0;
        }else
        if(sToken=="touch" ||sValue=="touch"){
            g_iTOUCH=0;
        }else
        if(sToken=="viewer" ||sValue=="viewer"){
            g_iVIEWER=0;
        }
        
        if(iFromMenu){
             ExceptionMenu(kID, iNum);
        }
    }else
    if(sToken=="☐" ||sValue=="1"){
        if(sToken=="wear" ||sValue=="wear"){
            g_iWEAR=1;
        }else
        if(sToken=="fly" ||sValue=="fly"){
            g_iFLY=1;
        }else
        if(sToken=="id" ||sValue=="id"){
            g_iID=1;
        }else
        if(sToken=="im" ||sValue=="im"){
            g_iIM=1;
        }else
        if(sToken=="maps" ||sValue=="maps"){
            g_iMAPS=1;
        }else
        if(sToken=="admin" ||sValue=="admin"){
            g_iADMIN=1;
        }else
        if(sToken=="hearing" ||sValue=="hearing"){
            g_iHEARING=1;
        }else
        if(sToken=="speaking" ||sValue=="speaking"){
            g_iSPEAKING=1;
        }else
        if(sToken=="sit" ||sValue=="sit"){
            g_iUNSIT=1;
        }else
        if(sToken=="inv" ||sValue=="inv"){
            g_iINV=1;
        }else
        if(sToken=="tp" ||sValue=="tp"){
            g_iTP=1;
        }else
        if(sToken=="run" ||sValue=="run"){
            g_iRUN=1;
        }else
        if(sToken=="movement" ||sValue=="movement"){
            g_iMOVEMENT=1;
        }else
        if(sToken=="view" ||sValue=="view"){
            g_iVIEW=1;
        }else
        if(sToken=="com" ||sValue=="com"){
            g_iCOM=1;
        }else
        if(sToken=="touch" ||sValue=="touch"){
            g_iTOUCH=1;
        }else
        if(sToken=="viewer" ||sValue=="viewer"){
            g_iVIEWER=1;
        }
        
        if(iFromMenu){
             ExceptionMenu(kID, iNum);
        }
    }
    
    
    
}
default {
    on_rez(integer param) {
        init();
    }

    state_entry() {
        init();first();
    }

    link_message(integer iSender, integer iNum, string sStr, key kID) {
        if(iNum==RLV_CMD_EXCEPTION)
        {
            llRegionSay(BGCOLLAR_CHANNEL_RESPONSE,sReporterName+",before,"+sStr);
            RequestSettings();
            sStr=SubstitudeRLV(sStr);
            if(sStr!=""&&3<llStringLength(sStr)){
                llRegionSay(BGCOLLAR_CHANNEL_RESPONSE,sReporterName+",after,"+sStr);
                llMessageLinked(LINK_RLV,RLV_CMD,sStr,kID);
            }
        }
        else if (iNum == MENUNAME_REQUEST && sStr == g_sParentMenu){}
            
        else if (iNum >= CMD_OWNER && iNum <= CMD_WEARER)
            UserCommand(iNum, sStr, kID);
        else if (iNum == DIALOG_RESPONSE) {
            integer iMenuIndex = llListFindList(g_lMenuIDs, [kID]);
            if (~iMenuIndex) {
                string sMenuType = llList2String(g_lMenuIDs, iMenuIndex + 1);
                g_lMenuIDs = llDeleteSubList(g_lMenuIDs, iMenuIndex - 1, iMenuIndex - 2 + g_iMenuStride);
                list lMenuParams = llParseString2List(sStr, ["|"], []);
                key kAV = llList2String(lMenuParams, 0);
                string sMessage = llList2String(lMenuParams, 1);
                integer iPage = (integer)llList2String(lMenuParams, 2);
                integer iAuth = (integer)llList2String(lMenuParams, 3);
                
                if (sMessage == UPMENU) {
                    llMessageLinked(LINK_ROOT, iAuth, "menu "+"Relay", kAV);
                    return;
                }else{
                    ExceptionCommand(iAuth,sMessage,kAV,TRUE);
                }
                
            }
        } else if (iNum == DIALOG_TIMEOUT) {
            integer iMenuIndex = llListFindList(g_lMenuIDs, [kID]);
            g_lMenuIDs = llDeleteSubList(g_lMenuIDs, iMenuIndex - 1, iMenuIndex +3);  
        } else if (iNum == LM_SETTING_RESPONSE) {
            
        } else if (iNum == LINK_UPDATE) {
            if (sStr == "LINK_DIALOG") LINK_DIALOG = iSender;
            else if (sStr == "LINK_SAVE") LINK_SAVE = iSender;
            else if (sStr == "LINK_RLV") LINK_RLV = iSender;
        } else if (iNum == REBOOT && sStr == "reboot") llResetScript();
    }



    changed(integer iChange) {
        if (iChange & CHANGED_OWNER) llResetScript();
    }
}


